{"version":3,"sources":["components/FriendsPage.js","components/Friend.js","components/FriendsList.js","App.js","index.js"],"names":["FriendsPage","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","handleSubmit","e","console","log","currentTarget","preventDefault","onSubmit","id","Math","floor","random","text","className","placeholder","value","onChange","target","name","ref","onClick","Friend","friends","removeFriend","completeFriend","Initialfriends","highlight","setHighlight","map","friend","index","style","color","FriendsList","setFriends","test","newFriends","updateFriends","isComplete","removedArr","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAuDeA,MArDf,SAAsBC,GACpB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,iBAAO,MAExBC,qBAAU,WACRF,EAASG,QAAQC,WAGnB,IAIMC,EAAe,SAAAC,GACnBC,QAAQC,IAAIF,EAAEG,eACdH,EAAEI,iBAWFd,EAAMe,SAAS,CACbC,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMlB,IAERC,EAAS,KAIX,OACE,uBAAMY,SAAUN,EAAcY,UAAU,YAAxC,qBAA4D,qCACtD,uBACEC,YAAY,2BACZC,MAAOrB,EACPsB,SA9BW,SAAAd,GACnBP,EAASO,EAAEe,OAAOF,QA8BVG,KAAK,OACLL,UAAU,aACVM,IAAKvB,IAEL,wBAAQwB,QAASnB,EAAcY,UAAU,cAAzC,+B,OCTGQ,EAlCA,SAAC,GAA+C,IAAD,EAA5CC,EAA4C,EAA5CA,QAAyBC,GAAmB,EAAnCC,eAAmC,EAAnBD,cACrCE,EAAc,YAAOH,GAEzB,EAAkC7B,oBAAS,GAA3C,mBAAOiC,EAAP,KAAkBC,EAAlB,KAEA,OADA,EAAAxB,SAAQC,IAAR,oBAAekB,IACRG,EAAeG,KAAI,SAACC,EAAQC,GAAT,OACxB,sBACEjB,UAAW,WADb,UAIE,gCACGgB,EAAOjB,KACR,8BACG,qBAHKiB,EAAOrB,IAOjB,sBAAKK,UAAU,QAAf,UACE,cAAC,IAAD,CACEO,QAAS,kBAAMG,EAAaM,EAAOrB,KACnCK,UAAU,gBAEZ,cAAC,IAAD,CACEO,QAAS,WACP,OAA6BO,GAAR,IAAdD,IAETK,MAAOL,EAAU,CAACM,MAAO,UAAU,CAACA,MAAO,SAC3CnB,UAAU,mBAnBTiB,OCyCIG,MAhDf,WAKC,MAA8BxC,mBAAS,IAAvC,mBAAO6B,EAAP,KAAgBY,EAAhB,KA8BC,OACE,qCACE,yCACA,cAAC,EAAD,CAAa3B,SA/BC,SAAAsB,GAAW,IAAD,EAC1B,GAAKA,EAAOjB,OAAQ,QAAQuB,KAAKN,EAAOjB,MAAxC,CAIA,IAAMwB,EAAU,CAAIP,GAAJ,mBAAeP,IAC/BY,EAAWE,IACX,EAAAjC,SAAQC,IAAR,oBAAekB,QAyBb,cAAC,EAAD,CACEA,QAASA,EACTE,eAjBiB,SAAAhB,GACrB,IAAI6B,EAAgBf,EAAQM,KAAI,SAAAC,GAI9B,OAHIA,EAAOrB,KAAOA,IAChBqB,EAAOS,YAAcT,EAAOS,YAEvBT,KAETK,EAAWG,IAWPd,aAxBe,SAAAf,GACnB,IAAM+B,EAAa,YAAIjB,GAASkB,QAAO,SAAAX,GAAM,OAAIA,EAAOrB,KAAOA,KAC/DL,QAAQC,MACT8B,EAAWK,UCyBCE,MA7Cf,WAsCI,OACA,qBAAK5B,UAAU,WAAf,SACE,cAAC,EAAD,OCzCN6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b83461da.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction FriendsPage (props) {\n  const [input, setInput] = useState('');\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    console.log(e.currentTarget);\n    e.preventDefault();\n    // fetch('http://localhost:3001/friends',{\n    //   method:'POST',\n    //   headers: {\n    //     'content-type':'application/json'\n    //   },\n    //   body: JSON.stringify({id:Math.floor(Math.random() * 10000),\n    //   name:e.target.value\n    //   })\n    // })\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });    \n    setInput('');\n  };\n\n\n  return (\n    <form onSubmit={handleSubmit} className='todo-form'>        <>\n          <input\n            placeholder=\"Enter your friend's name\"\n            value={input}\n            onChange={handleChange}\n            name='text'\n            className='todo-input'\n            ref={inputRef}\n          />\n            <button onClick={handleSubmit} className='todo-button'>\n            Add Friend\n          </button>\n\n        </>\n    </form>\n  );\n}\n\nexport default FriendsPage;\n","import React, { useEffect, useState } from 'react';\nimport { RiCloseCircleLine, RiStarLine } from 'react-icons/ri';\n\nconst Friend = ({ friends, completeFriend, removeFriend }) => {\nconst Initialfriends = [...friends];\n\n  const [highlight, setHighlight] = useState(false);\n  console.log(...friends);\n  return Initialfriends.map((friend, index) => (\n    <div\n      className={'todo-row'}\n      key={index}\n    >\n      <div key={friend.id}>\n        {friend.text}\n        <div>\n          {\"is your friend\"}\n        </div>\n      </div>\n\n      <div className='icons'>\n        <RiCloseCircleLine\n          onClick={() => removeFriend(friend.id)}\n          className='delete-icon'\n        />\n        <RiStarLine\n          onClick={()=> {\n            return highlight === false ? setHighlight(true) : setHighlight(false)}\n          }           \n          style={highlight?{color: 'yellow'}:{color: 'white'}}\n          className='star-icon'\n        />\n      </div>\n    </div>\n  ));\n};\n\nexport default Friend;\n","import React, { useState } from 'react';\nimport FriendsPage from './FriendsPage';\nimport Friend from './Friend';\n\nfunction FriendsList() {\n\n \n  // const initialData = data.map(e => e.name)\n//const friends = initialData;\n const [friends, setFriends] = useState([]);\n  // /^\\s*$/ --> regex used looking for blank/empty lines. \n  const addFriend = friend => {\n    if (!friend.text || /^\\s*$/.test(friend.text)) {\n      return;\n    }\n\n    const newFriends = [friend, ...friends];\n    setFriends(newFriends);\n    console.log(...friends);\n\n  };\n\n  const removeFriend = id => {\n    const removedArr = [...friends].filter(friend => friend.id !== id);\n    console.log();\n   setFriends(removedArr);\n  };\n\n  const completeFriend = id => {\n    let updateFriends = friends.map(friend => {\n      if (friend.id === id) {\n        friend.isComplete = !friend.isComplete;\n      }\n      return friend;\n    });\n    setFriends(updateFriends);\n  };\n\n\n  return (\n    <>\n      <h1>Friends</h1>\n      <FriendsPage onSubmit={addFriend} />\n      <Friend\n        friends={friends}\n        completeFriend={completeFriend}\n        removeFriend={removeFriend}\n      />\n    </>\n  );\n}\n\nexport default FriendsList;\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport FriendSearch from './components/FriendSearch';\nimport FriendsList from './components/FriendsList';\n\nfunction App() {\n  // const [data1, setData1] = useState('');\n  // useEffect(() => {fetchData()\n  // },[data1]);\n\n  // const data =    [ {\n  //   \"id\": 1,\n  //   \"name\": \"Rahul Gupta\"\n  // },\n  // {\n  //   \"id\": 2,\n  //   \"name\": \"Virat Kohli\"\n  // },\n  // {\n  //   \"id\": 3,\n  //   \"name\": \"Leo Messi\"\n  // },\n  // {\n  //   \"id\": 4,\n  //   \"name\": \"Cr Ronaldo\"\n  // }]\n\n// const fetchData = async () => {\n//   return await fetch('http://localhost:3001/friends')\n//     .then(response => response.json())\n//     .then(data => setData1(data));\n//   } \n  // data1.array.forEach(element => {\n  //   console.log(element);\n  // });\n  //\n//  for(const item of data1){\n//  let data2=object;\n\n//  }\n\n//const data2 = Object.values(data1);\n\n    return (\n    <div className='todo-app'>\n      <FriendsList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}