{"version":3,"sources":["components/Friend.js","components/FriendSearch.js","components/FriendsPage.js","components/FriendsList.js","App.js","index.js"],"names":["Friend","friends","removeFriend","completeFriend","Initialfriends","useState","highlight","setHighlight","console","log","map","friend","index","className","id","onClick","style","color","FriendSearch","setFriendsData","setInput","fetchData","a","fetch","then","response","json","data","e","i","name","useEffect","FriendsPage","props","input","inputRef","useRef","current","focus","handleSubmit","target","value","preventDefault","method","headers","body","JSON","stringify","Math","floor","random","onSubmit","placeholder","onChange","ref","FriendsList","initialData","setFriends","text","test","newFriends","updateFriends","isComplete","removedArr","filter","App","data1","setData1","Object","values","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cad4d90.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { RiCloseCircleLine, RiStarLine } from 'react-icons/ri';\n\nconst Friend = ({ friends, completeFriend, removeFriend }) => {\nconst Initialfriends = friends[0];\n\n  const [highlight, setHighlight] = useState(false);\n  console.log(Initialfriends);\n  return Initialfriends.map((friend, index) => (\n    <div\n      className={'todo-row'}\n      key={index}\n    >\n      <div key={friend.id}>\n        {friend}\n        <div>\n          {\"is your friend\"}\n        </div>\n      </div>\n\n      <div className='icons'>\n        <RiCloseCircleLine\n          onClick={() => removeFriend(friend.id)}\n          className='delete-icon'\n        />\n        <RiStarLine\n          onClick={()=> {\n            return highlight === false ? setHighlight(true) : setHighlight(false)}\n          }           \n          style={highlight?{color: 'yellow'}:{color: 'white'}}\n          className='star-icon'\n        />\n      </div>\n    </div>\n  ));\n};\n\nexport default Friend;\n","import { useEffect, useState } from \"react\";\r\nimport Friend from \"./Friend\";\r\n\r\n\r\n\r\n\r\nconst FriendSearch = () =>{\r\n    const [friendsData, setFriendsData] = useState('');\r\n    const [input, setInput] = useState('');\r\n\r\n    const fetchData = async () => {\r\n        return await fetch('http://localhost:3001/friends')\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            data.map((e,i) => {\r\n                setFriendsData(e);\r\n                setInput(e.name);\r\n            })\r\n           });\r\n        }\r\n        useEffect(() => {fetchData()\r\n        },[]);\r\n\r\n\r\nconst updateInput = async(input)=>{\r\n    const filtered = friendsData.filter(friend => {\r\n        return friend.name.toLowerCase().includes(input.toLowerCase())\r\n       })\r\n        }\r\n           return (\r\n            <>\r\n           {/* <Friend friends={updateInput}/> */}\r\n            </>\r\n           );\r\n\r\n}\r\n\r\nexport default FriendSearch;","import React, { useState, useEffect, useRef } from 'react';\n\nfunction FriendsPage (props) {\n  const [input, setInput] = useState('');\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    console.log(e.target.value);\n    e.preventDefault();\n    fetch('http://localhost:3001/friends',{\n      method:'POST',\n      headers: {\n        'content-type':'application/json'\n      },\n      body: JSON.stringify({id:Math.floor(Math.random() * 10000),\n      name:e.target.value\n      })\n    })\n    \n    setInput('');\n  };\n\n\n  return (\n    <form onSubmit={handleSubmit} className='todo-form'>        <>\n          <input\n            placeholder=\"Enter your friend's name\"\n            value={input}\n            onChange={handleChange}\n            name='text'\n            className='todo-input'\n            ref={inputRef}\n          />\n            <button value={input} onClick={handleSubmit} className='todo-button'>\n            Add Friend\n          </button>\n\n        </>\n    </form>\n  );\n}\n\nexport default FriendsPage;\n","import React, { useEffect, useState } from 'react';\nimport FriendsPage from './FriendsPage';\nimport Friend from './Friend';\n\nfunction FriendsList({data}) {\n\n \n  const initialData = data.map(e => e.name)\n//const friends = initialData;\n const [friends, setFriends] = useState([initialData]);\n  // /^\\s*$/ --> regex used looking for blank/empty lines. \n  const addFriend = friend => {\n    if (!friend.text || /^\\s*$/.test(friend.text)) {\n      return;\n    }\n\n    const newFriends = [friend, ...friends];\n\n    setFriends(newFriends);\n  };\n\n  const removeFriend = id => {\n    const removedArr = [...friends].filter(friend => friend.id !== id);\n    console.log();\n   setFriends(removedArr);\n  };\n\n  const completeFriend = id => {\n    let updateFriends = friends.map(friend => {\n      if (friend.id === id) {\n        friend.isComplete = !friend.isComplete;\n      }\n      return friend;\n    });\n    setFriends(updateFriends);\n  };\n\n\n  return (\n    <>\n      <h1>Friends</h1>\n      <FriendsPage onSubmit={addFriend} />\n      <Friend\n        friends={friends}\n        completeFriend={completeFriend}\n        removeFriend={removeFriend}\n      />\n    </>\n  );\n}\n\nexport default FriendsList;\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport FriendSearch from './components/FriendSearch';\nimport FriendsList from './components/FriendsList';\n\nfunction App() {\n  const [data1, setData1] = useState('');\n  useEffect(() => {fetchData()\n  },[data1]);\n\n  const data =    [ {\n    \"id\": 1,\n    \"name\": \"Rahul Gupta\"\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Virat Kohli\"\n  },\n  {\n    \"id\": 3,\n    \"name\": \"Leo Messi\"\n  },\n  {\n    \"id\": 4,\n    \"name\": \"Cr Ronaldo\"\n  }]\n\nconst fetchData = async () => {\n  return await fetch('http://localhost:3001/friends')\n    .then(response => response.json())\n    .then(data => setData1(data));\n  } \n  // data1.array.forEach(element => {\n  //   console.log(element);\n  // });\n  //\n//  for(const item of data1){\n//  let data2=object;\n\n//  }\n\nconst data2 = Object.values(data1);\n\n    return (\n    <div className='todo-app'>\n      <FriendsList data={data}/>\n      <FriendSearch/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}